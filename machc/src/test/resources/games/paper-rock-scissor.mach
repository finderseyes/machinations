/**
Classical paper-rock-scissor.
- Number of players: 2.
*/
graph player {
    token selection = ("rock", "paper", "scissor");
    pool rock, paper, scissor;
    let has_played = false;

    interactive (!has_played) function play() {
        if (selection == "rock")
            :transfer(-> rock);
        else if (selection == "paper")
            transfer(->paper);
        else
            :transfer(->scissor);

        has_played = true;
    }

    function reset() {
        has_played = false;
        :transfer(rock->, paper->, scissor->);
    }
}

default graph paper_rock_scissor {
    @{owner = "player 1"}
    player player_one

    @{owner = "player 2"}
    player player_two;

    end _player_one_wins, _player_two_wins, _draw;

    automatic function game_rule() {
        if (player_one.has_played && player_two.has_played) {
            if (check_win(player_one, player_two))
                :transfer(->_player_one_wins);
            else if (check_win(player_two, player_one))
                :transfer(->_player_one_wins);
            else
                :transfer(->_draw);
        }
    }

    function check_win(player_one, player_two) {
        return (
            player_one.rock && player_two.scissor ||
            player_one.scissor && player_two.paper ||
            player_one.paper && player_two.rock);
    }
}